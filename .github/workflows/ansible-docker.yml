name: Ansible Docker Automation

on:
  push:
    branches:
      - main  # Trigger workflow on push to 'main' branch
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  ansible-playbook:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        # Remove any existing Docker packages to avoid conflicts
        sudo apt-get remove -y docker docker-engine docker.io containerd runc
        
        # Update the package list and install prerequisite packages
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
        
        # Add Docker's official GPG key
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        
        # Add Docker's official repository to APT sources
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        
        # Update the package list again to include Docker's repository
        sudo apt-get update
        
        # Install Docker and containerd from Docker's repository
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        
        # Install Python and pip
        sudo apt-get install -y python3-pip
        
        # Install Ansible
        pip3 install ansible
        
        # Install Ansible Docker collection
        ansible-galaxy collection install community.docker

    - name: Run Ansible Playbook to Spin Up Docker Container
      env:
        ANSIBLE_CONFIG: ./ansible/ansible.cfg  # Optional: Specify a custom Ansible config file if needed
      run: ansible-playbook ansible/docker-playbook.yml -e "state=started"

    - name: Run Ansible Playbook to Tear Down Docker Container
      if: always()  # Ensures this step runs regardless of previous step's success
      run: ansible-playbook ansible/docker-playbook.yml -e "state=absent"

